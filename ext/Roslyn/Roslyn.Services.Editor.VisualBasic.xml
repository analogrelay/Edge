<?xml version="1.0"?>
<doc>
<assembly>
<name>
Roslyn.Services.Editor.VisualBasic
</name>
</assembly>
<members>
<member name="T:Roslyn.Services.Editor.VisualBasic.Utilities.Undo.LineCommitMergePolicy">
	<summary>
 A IMergeTextUndoTransactionPolicy that indicates that any undo transaction using this policy
 should be merged with any automatic formatting done by line commit.
 </summary>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.Rename.ConflictResolutionRewriter.RewriteExtensionMethodInvocation(Roslyn.Compilers.VisualBasic.InvocationExpressionSyntax,Roslyn.Compilers.VisualBasic.ExpressionSyntax,Roslyn.Compilers.VisualBasic.ArgumentListSyntax,Roslyn.Compilers.Common.IMethodSymbol)">
	<summary>
 Takes an invocation of an extension method and rewrites it to the non-extension-method
 invocation.
 </summary>
	<param name="originalNode">The original node from the tree, before any rewriting has
 been done.</param>
	<param name="thisExpression">The "this" expression of the invocation.</param>
	<param name="rewrittenArgumentList">The argument list of the original invocation, with
 any rewriting having taken place for deeper conflicts.</param>
	<param name="extensionMethod">The extension method we're invoking, in reduced
 form.</param>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.Rename.ConflictResolutionRewriter.RewriteExtensionMethodInvocation(Roslyn.Compilers.VisualBasic.InvocationExpressionSyntax,Roslyn.Compilers.VisualBasic.ExpressionSyntax,Roslyn.Compilers.VisualBasic.ArgumentListSyntax,Roslyn.Compilers.Common.IMethodSymbol,System.Boolean)">
	<summary>
 Takes an invocation of an extension method and rewrites it to the non-extension-method
 invocation.
 </summary>
	<param name="originalNode">The original node from the tree, before any rewriting has
 been done.</param>
	<param name="thisExpression">The "this" expression of the invocation.</param>
	<param name="rewrittenArgumentList">The argument list of the original invocation, with
 any rewriting having taken place for deeper conflicts.</param>
	<param name="extensionMethod">The extension method we're invoking, in reduced
 form.</param>
	<param name="includeGenerics">Whether we should include generic type arguments for the method call.</param>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OptionStatements.BuiltInTypesKeywordRecommender">
	<summary>
 Recommends built-in types in various contexts.
 </summary>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.RecommendationHelpers.GetParentOrNull(Roslyn.Compilers.VisualBasic.SyntaxNode)">
	<summary>
 Returns the parent of the node given. node may be null, which will cause this function to return null.
 </summary>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.RecommendationHelpers.GetExpressionTerminatingToken(Roslyn.Compilers.VisualBasic.SyntaxNode)">
	<summary>
 Given a syntax node, this returns the token that is the "end" token that ends this
 expression.
 </summary>
	<param name="expression">The expression to get the last token of.</param>
	<returns>The last token, or SyntaxKind.None if the last token is missing.</returns>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.WhileKeywordRecommender">
	<summary>
 Recommends the While keyword after a Skip/Take query
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.WhereKeywordRecommender">
	<summary>
 Recommends the "Where" query clause.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.TakeKeywordRecommender">
	<summary>
 Recommends the Take operator for Take/Take While.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.SkipKeywordRecommender">
	<summary>
 Recommends the Skip operator for Skip/Skip While.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.OrderByKeywordRecommender">
	<summary>
 Recommends the "Order By" query clause.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.OnKeywordRecommender">
	<summary>
 Recommends the "On" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.LetWhileKeywordRecommender">
	<summary>
 Recommends the Let operator.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.JoinKeywordRecommender">
	<summary>
 Recommends the "Join" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.IntoKeywordRecommender">
	<summary>
 Recommends the "Into" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.GroupJoinKeywordRecommender">
	<summary>
 Recommends the ""Group Join" query clause when it appears inside a normal Join clause.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.GroupByKeywordRecommender">
	<summary>
 Recommends the "By" keyword for the "Group By" query clause.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.FromKeywordRecommender">
	<summary>
 Recommends the From keyword to introduce a LINQ query or do a cross-join.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.EqualsKeywordRecommender">
	<summary>
 Recommends the Equals keyword when in a join syntax.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.DistinctKeywordRecommender">
	<summary>
 Recommends the "Distinct" query operator.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.AscendingDescendingKeywordRecommender">
	<summary>
 Recommends the "Ascending" and "Descending" contextual keywords in a Order By clause.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.AggregateKeywordRecommender">
	<summary>
 Recommends the Aggregate operator.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.PreprocessorDirectives.RegionDirectiveKeywordRecommender">
	<summary>
 Recommends the "#Region" directive
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.PreprocessorDirectives.IfDirectiveKeywordRecommender">
	<summary>
 Recommends the "#If" preprocessor directive
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.PreprocessorDirectives.EndRegionDirectiveKeywordRecommender">
	<summary>
 Recommends the "#End Region" directive
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.PreprocessorDirectives.EndIfDirectiveKeywordRecommender">
	<summary>
 Recommends the "#End If" preprocessor directive
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.PreprocessorDirectives.ElseIfDirectiveKeywordRecommender">
	<summary>
 Recommends the "#ElseIf" preprocessor directive
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.PreprocessorDirectives.ElseDirectiveKeywordRecommender">
	<summary>
 Recommends the "#Else" preprocessor directive
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.PreprocessorDirectives.ConstDirectiveKeywordRecommender">
	<summary>
 Recommends the "#Const" preprocessor directive
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OptionStatements.StrictOptionsRecommender">
	<summary>
 Recommends the "On" and "Off" options that come after "Option Infer"
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OptionStatements.OptionNamesRecommender">
	<summary>
 Recommends the names of options that can appear after an Option keyword, such as Compare or Infer.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OptionStatements.OptionKeywordRecommender">
	<summary>
 Recommends the "Option" keyword
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OptionStatements.InferOptionsRecommender">
	<summary>
 Recommends the "On" and "Off" options that come after "Option Infer"
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OptionStatements.ExplicitOptionsRecommender">
	<summary>
 Recommends the "On" and "Off" options that appear after Option Explicit.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OptionStatements.CompareBinaryTextRecommender">
	<summary>
 Recommends the "Binary" and "Text" options that come after "Option Compare"
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OnErrorStatements.ResumeKeywordRecommender">
	<summary>
 Recommends "Resume Next" after "On Error", or "Resume" as a standalone statement
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OnErrorStatements.OnErrorKeywordRecommender">
	<summary>
 Recommends "On Error Resume Next" and "On Error Goto" in a statement context.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OnErrorStatements.NextKeywordRecommender">
	<summary>
 Recommends "Next" after "On Error Resume" or after the "Resume" statement
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OnErrorStatements.GoToKeywordRecommender">
	<summary>
 Recommends "GoTo" after "On Error"
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OnErrorStatements.GoToDestinationsRecommender">
	<summary>
 Recommends 0 and -1 as the "destinations" of where to go to after On Error Goto
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.OnErrorStatements.ErrorKeywordRecommender">
	<summary>
 Recommends "Error" after "On" in a "On Error" statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ModifierCollectionFacts">
	<summary>
 A helper class that is constructed giving a set of modifiers. It takes these modifiers, and
 breaks them down into separate categories, as well as determines what type of declaration is
 being forced if certain modifiers are present.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.WithKeywordRecommender">
	<summary>
 Recommends the "From" keyword when used in a New syntax (such as New foo From)
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.TypeOfKeywordRecommender">
	<summary>
 Recommends the "TypeOf" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.TypeConversionOperatorKeywordRecommender">
	<summary>
 Recommends binary infix operators that are English text, like "AndAlso", "OrElse", "Like", etc.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.TrueFalseKeywordRecommender">
	<summary>
 Recommends the "True" and "False" keywords
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.SubFunctionKeywordRecommender">
	<summary>
 Recommends the "Sub" and "Function" keywords in expression contexts that would start a lambda.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.NotKeywordRecommender">
	<summary>
 Recommends the "Not" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.NothingKeywordRecommender">
	<summary>
 Recommends the "Nothing" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.NewKeywordRecommender">
	<summary>
 Recommends the "New" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.MyClassKeywordRecommender">
	<summary>
 Recommends the "MyClass" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.MyBaseKeywordRecommender">
	<summary>
 Recommends the "MyBase" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.MeKeywordRecommender">
	<summary>
 Recommends the "Me" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.KeyKeywordRecommender">
	<summary>
 Recommends the "Key" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.IfKeywordRecommender">
	<summary>
 Recommends the "If" keyword when used for the "ternary" operator
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.GlobalKeywordRecommender">
	<summary>
 Recommends the "Global" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.GetXmlNamespaceKeywordRecommender">
	<summary>
 Recommends the "GetXmlNamespace" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.GetTypeKeywordRecommender">
	<summary>
 Recommends the "GetType" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.FromKeywordRecommender">
	<summary>
 Recommends the "With" keyword when used in a New syntax (such as New foo With)
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.BinaryOperatorKeywordRecommender">
	<summary>
 Recommends binary infix operators that are English text, like "AndAlso", "OrElse", "Like", etc.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Expressions.AddressOfKeywordRecommender">
	<summary>
 Recommends the "AddressOf" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.EventHandling.RemoveHandlerKeywordRecommender">
	<summary>
 Recommends the "RemoveHandler" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.EventHandling.RaiseEventKeywordHandler">
	<summary>
 Recommends the "RaiseEvent" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.EventHandling.HandlesKeywordHandler">
	<summary>
 Recommends the "Handles" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.EventHandling.AddHandlerKeywordRecommender">
	<summary>
 Recommends the "AddHandler" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.SubKeywordRecommender">
	<summary>
 Recommends the "Sub" keyword in member declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.StructureKeywordRecommender">
	<summary>
 Recommends the "Structure" keyword in type declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.StaticKeywordRecommender">
	<summary>
 Recommends the "Static" keyword for the start of a statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.PropertyKeywordRecommender">
	<summary>
 Recommends the "Property" keyword in member declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.ParameterModifiersKeywordRecommender">
	<summary>
 Recommends the ByVal, ByRef, etc keywords.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.OverloadableOperatorRecommender">
	<summary>
 Recommends the various list of operators you can overload after the "Operator" keyword
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.OperatorKeywordRecommender">
	<summary>
 Recommends the "Operator" keyword in member declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.NamespaceKeywordRecommender">
	<summary>
 Recommends the "Namespace" keyword in type declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.ModuleKeywordRecommender">
	<summary>
 Recommends the "Module" keyword in type declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.ModifierKeywordsRecommender">
	<summary>
 Recommends the "Property" keyword in member declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.LibKeywordRecommender">
	<summary>
 Recommends the "Lib" keyword in external method declarations.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.InterfaceKeywordRecommender">
	<summary>
 Recommends the "Interface" keyword in type declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.InKeywordRecommender">
	<summary>
 Recommends the "In" keyword in all types of declarations.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.InheritsKeywordRecommender">
	<summary>
 Recommends the "Inherits" keyword.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.ImportsKeywordRecommender">
	<summary>
 Recommends the "Imports" keyword
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.ImplementsKeywordRecommender">
	<summary>
 Recommends the "Implements" keyword
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.GetSetKeywordRecommender">
	<summary>
 Recommends the "Get" and "Set" keyword in property declarations.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.FunctionKeywordRecommender">
	<summary>
 Recommends the "Function" keyword in member declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.ExternalSubFunctionKeywordRecommender">
	<summary>
 Recommends the "Function" and "Sub" keywords in external method declarations.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.EventKeywordRecommender">
	<summary>
 Recommends the "Event" keyword in type declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.EnumKeywordRecommender">
	<summary>
 Recommends the "Enum" keyword in type declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.EndBlockKeywordRecommender">
	<summary>
 Recommends "End [block]" or, if after a End keyword, just the Block.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.DimKeywordRecommender">
	<summary>
 Recommends the "Dim" keyword in all appropriate contexts.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.DelegateSubFunctionKeywordRecommender">
	<summary>
 Recommends the "Function" and "Sub" keywords in external method declarations.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.DelegateKeywordRecommender">
	<summary>
 Recommends the "Delegate" keyword in member declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.DeclareKeywordRecommender">
	<summary>
 Recommends the "Declare" keyword in member declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.ClassKeywordRecommender">
	<summary>
 Recommends the "Class" keyword in type declaration contexts
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.CharsetModifierKeywordRecommender">
	<summary>
 Recommends one of the charset modifiers after a "Declare" keyword
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.AttributeScopesKeywordRecommender">
	<summary>
 Recommends the "Assembly" and "Module" keyword for top-level attributes that may exist in a file.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.AsKeywordRecommender">
	<summary>
 Recommends the "As" keyword in all types of declarations.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.AliasKeywordRecommender">
	<summary>
 Recommends the "Alias" keyword in external method declarations.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.WithKeywordRecommender">
	<summary>
 Recommends the "With" statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.WhileLoopKeywordRecommender">
	<summary>
 Recommends the "While" keyword at the start of a statement. "While" as a part of a Do statement is handled in
 the UntilAndWhileKeywordRecommender.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.WhenKeywordRecommender">
	<summary>
 Recommends the "When" keyword for a Catch filter
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.UsingKeywordRecommender">
	<summary>
 Recommends the "Using" keyword at the beginning of a statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.UntilKeywordRecommender">
	<summary>
 Recommends the "Each" keyword after the "For" keyword
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.TryKeywordRecommender">
	<summary>
 Recommends the "Try" keyword for the statement context
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.ToKeywordRecommender">
	<summary>
 Recommends the "To" keyword in an For.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.ThrowKeywordRecommender">
	<summary>
 Recommends the "Throw" keyword for the statement context
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.ThenKeywordRecommender">
	<summary>
 Recommends the "Then" keyword in an If statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.SyncLockKeywordRecommender">
	<summary>
 Recommends the "SyncLock" keyword for the statement context
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.StopKeywordRecommender">
	<summary>
 Recommends the "Stop" statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.StepKeywordRecommender">
	<summary>
 Recommends the "Step" keyword in a For statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.SelectKeywordRecommender">
	<summary>
 Recommends the "Select" keyword at the start of a statement
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.ReturnKeywordRecommender">
	<summary>
 Recommends the "Return" keyword at the start of a statement
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.NextKeywordRecommender">
	<summary>
 Recommends the "Next" statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.LoopKeywordRecommender">
	<summary>
 Recommends the "Loop" statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.IfKeywordRecommender">
	<summary>
 Recommends the "If" keyword for the statement context
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.GotoKeywordRecommender">
	<summary>
 Recommends the "Goto" keyword
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.ForKeywordRecommender">
	<summary>
 Recommends the "For" keyword for the statement context
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.FinallyKeywordRecommender">
	<summary>
 Recommends the "Finally" keyword for the statement context
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.ExitKeywordRecommender">
	<summary>
 Recommends the "Exit" keyword at the start of a statement
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.EndKeywordRecommender">
	<summary>
 Recommends the "End" statement
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.ElseKeywordRecommender">
	<summary>
 Recommends the "Else" keyword for the statement context.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.ElseIfKeywordRecommender">
	<summary>
 Recommends the "ElseIf" keyword for the statement context
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.EachKeywordRecommender">
	<summary>
 Recommends the "Each" keyword after the "For" keyword
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.DoKeywordRecommender">
	<summary>
 Recommends the "Do" keyword at the start of a statement
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.ContinueKeywordRecommender">
	<summary>
 Recommends the "Continue" keyword at the start of a statement when in any loop.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.CatchKeywordRecommender">
	<summary>
 Recommends the "Catch" keyword for the statement context
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.CaseKeywordRecommender">
	<summary>
 Recommends the "Case" and possibly "Case Else" keyword inside a Select block
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ControlFlowStatements.CallKeywordRecommender">
	<summary>
 Recommends the "Call" statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ArrayStatements.ReDimKeywordRecommender">
	<summary>
 Recommends the "ReDim" statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ArrayStatements.PreserveKeywordRecommender">
	<summary>
 Recommends the "Preserve" modifier after the ReDim statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.ArrayStatements.EraseKeywordRecommender">
	<summary>
 Recommends the "Erase" statement.
 </summary>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.Outlining.BannerTextBuilder.AppendParameterList(Roslyn.Compilers.VisualBasic.ParameterListSyntax,System.Boolean)">
	<summary>
 Appends a parameter list to the banner text.
 </summary>
	<param name="parametersOpt">The <see cref="T:Roslyn.Compilers.VisualBasic.ParameterListSyntax"/> to append. This parameter may be null.</param>
	<param name="emptyParentheses">If true, empty parentheses will be appended if <paramref name="parametersOpt"/> is null.</param>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.LineSeparators.VisualBasicLineSeparatorService.IsSeparableBlock(Roslyn.Compilers.VisualBasic.SyntaxNodeOrToken)">
	<summary>Node types that are interesting for line separation.</summary>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.LineSeparators.VisualBasicLineSeparatorService.IsSeparableContainer(Roslyn.Compilers.Common.CommonSyntaxNode)">
	<summary>Node types that may contain separable blocks.</summary>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.LineSeparators.VisualBasicLineSeparatorService.GetLineSeparators(Roslyn.Services.IDocument,Roslyn.Compilers.TextSpan,System.Threading.CancellationToken)">
	<summary>
 Given a syntaxTree returns line separator spans. The operation may take fairly long time
 on a big syntaxTree so it is cancelable.
 </summary>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.LineSeparators.VisualBasicLineSeparatorService.ProcessNodeList``1(Roslyn.Compilers.VisualBasic.SyntaxTree,Roslyn.Compilers.VisualBasic.SeparatedSyntaxList{``0},System.Collections.Generic.List{Roslyn.Compilers.TextSpan},System.Threading.CancellationToken)">
	<summary>
 If node is separable and not the last in its container =&gt; add line separator after the node
 If node is separable and not the first in its container =&gt; ensure separator before the node
 last separable node in Program needs separator after it.
 </summary>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.LineCommit.ICommitFormatter.CommitRegion(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.ITextSnapshot,Roslyn.Compilers.VisualBasic.SyntaxTree,System.Threading.CancellationToken)">
	<summary>
 Commits a region by formatting and case correcting it. It is assumed that an
 ITextUndoTransaction is open the underlying text buffer, as multiple edits may be done
 by this function. Further, if the operation is cancelled, the buffer may be left in a
 partially committed state that must be rolled back by the transaction.
 </summary>
	<returns>True if a edit occurred, false otherwise.</returns>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.LineCommit.ContainingStatementInfo.GetInfo(Microsoft.VisualStudio.Text.SnapshotPoint,Roslyn.Compilers.VisualBasic.SyntaxTree)">
	<summary>
 This function returns the "logical" statement that a given point is in. This may include
 things like directives which live in trivia, and may return statements from previous
 lines that are (potentially) continuable.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.LineCommit.CommitViewManager">
	<summary>
 This class watches for view-based events in relation to a specific subject buffer and passes along commit operations.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.LineCommit.CommitCommandHandler">
	<summary>
 Watches for the enter key being pressed, and triggers a commit in response.
 </summary>
	<remarks>This particular command filter acts as a "wrapper" around any other command, as it
 wishes to invoke the commit after whatever processed the enter is done doing what it's
 doing.</remarks>
</member><member name="F:Roslyn.Services.Editor.VisualBasic.LineCommit.CommitBufferManager._dirtyRegion">
	<summary>
 The tracking span which is the currently "dirty" region in the buffer. May be null if there is no dirty region.
 </summary>
</member><member name="F:Roslyn.Services.Editor.VisualBasic.LineCommit.CommitBufferManager._baseSnapshot">
	<summary>
 The base snapshot of the user's dirty edits; the snapshot of the text before any dirty
 editing began. May be null if there is no dirty region.
 </summary>
	<remarks></remarks>
</member><member name="F:Roslyn.Services.Editor.VisualBasic.LineCommit.CommitBufferManager._baseTreeTask">
	<summary>
 matching tree for base snapshot
 </summary>
	<remarks></remarks>
</member><member name="F:Roslyn.Services.Editor.VisualBasic.LineCommit.CommitBufferManager._suppressions">
	<summary>
 The number of times BeginSuppressingCommits() has been called.
 </summary>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.LineCommit.CommitBufferManager.CommitDirty(System.Threading.CancellationToken)">
	<summary>
 Commits any dirty region, if one exists
 </summary>
	<returns>True if a commit occurred, false otherwise.</returns>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.LineCommit.CommitBufferManager.BeginSuppressingCommits">
	<summary>
 Suppresses future commits, causing all calls to CommitDirty() to be a simple no-op, even
 if there is a dirty span.
 </summary>
	<returns>An IDisposable that should be disposed when the caller wants to resume
 submissions.</returns>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.LineCommit.CommitBufferManager">
	<summary>
 This class watches for buffer-based events, tracks the dirty regions, and invokes the formatter as appropriate
 </summary>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.Extensions.IClassificationTypesExtensions.GetClassificationForToken(Roslyn.Services.Editor.IClassificationTypes,Roslyn.Compilers.VisualBasic.SyntaxToken)">
	<summary>
 Return the classification type associated with this token.
 </summary>
	<param name="classificationTypes">The source of classification types.</param>
	<param name="token">The token to be classified.</param>
	<returns>The classification type for the token</returns>
	<remarks></remarks>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.EndConstructGeneration.EndConstructStatementVisitor.NeedsGetAccessor(Roslyn.Compilers.VisualBasic.PropertyStatementSyntax,Roslyn.Compilers.VisualBasic.MethodBlockSyntax)">
	<summary>
 Given a property declaration, determines if a Get accessor needs to be generated. This checks to see if any
 getters already exist.
 </summary>
	<param name="accessorToIgnore">An existing getter to ignore. When we are checking for existing getters, we
 might be in the middle of typing one that would be a false positive. </param>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.EndConstructGeneration.EndConstructStatementVisitor.NeedsSetAccessor(Roslyn.Compilers.VisualBasic.PropertyStatementSyntax,Roslyn.Compilers.VisualBasic.MethodBlockSyntax)">
	<summary>
 Given a property declaration, determines if a Set accessor needs to be generated. This checks to see if any
 getters already exist.
 </summary>
	<param name="accessorToIgnore">An existing getter to ignore. When we are checking for existing getters, we
 might be in the middle of typing one that would be a false positive. </param>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.EndConstructGeneration.EndConstructStatementVisitor.ConvertSingleLineStatementsToMultiLineStatements(Roslyn.Compilers.VisualBasic.SeparatedSyntaxList{Roslyn.Compilers.VisualBasic.StatementSyntax},System.String)">
	<summary>
 Given a separatedSyntaxList of statements separated by colons, converts them to a
 separate syntax list of statements separated by newlines
 </summary>
	<param name="statements">The list of statements to convert.</param>
	<param name="indentedWhitespace">The whitespace to indent with.</param>
</member><member name="M:Roslyn.Services.Editor.VisualBasic.EndConstructGeneration.EndConstructStatementVisitor.TryApplyOnForStatement(Roslyn.Compilers.VisualBasic.StatementSyntax)">
	<param name="forStatement">The ForStatementSyntax or ForEachStatementSyntax for the loop.</param>
</member><member name="P:Roslyn.Services.Editor.VisualBasic.EndConstructGeneration.EndConstructState.NewLineCharacter">
	<summary>
 The new line character that should be used when spitting lines of code.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.ContentType.FileExtensionMappings">
	<summary>
 Mappings of file extensions supported by the Visual Basic editor to VB content type.
 </summary>
</member><member name="F:Roslyn.Services.Editor.VisualBasic.ContentType.ContentTypeDefinitions.VisualBasicContentTypeDefinition">
	<summary>
 Definition of the primary VB content type.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.GroupKeywordRecommender">
	<summary>
 Recommends the "Group" query operator.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Queries.SelectKeywordRecommender">
	<summary>
 Recommends the "Select" query operator.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.ToKeywordRecommender">
	<summary>
 Recommends the "To" keyword in array bounds.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.Declarations.ConstKeywordRecommender">
	<summary>
 Recommends the "Const" keyword for the start of a statement.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Completion.KeywordRecommenders.IsStatementTerminatingTokenVisitor">
	<summary>
 A visitor that determines if the targetToken passed in the constructor can be considered
 the end of the visited statement. Tokens in the token stream of the file after
 targetToken are ignored. This means that in some cases, say "Throw" vs. "Throw x" there
 is more than one keyword that could terminate the statement.
 </summary>
</member><member name="F:Roslyn.Services.Editor.VisualBasic.Classification.SyntacticClassifier.Worker._nonOverlappingSpans">
	<summary>
 nonOverlappingSpans spans used for Debug validation that
 spans that worker produces are not mutually overlapping.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.Classification.SyntacticClassifier">
	<summary>
 A classifier for VisualBasic code that operates only on the syntax of the source and not the
 semantics. Note: this class operates in a hybrid sync/async manner. Specifically, while
 classification happens synchronously, it may be synchronous over a parse syntaxTree which is
 out of date. Then, asynchronously, we will attempt to get an up to date parse syntaxTree for
 the file. When we do, we will determine which sections of the file changed and we will use
 that to notify the editor about what needs to be reclassified.
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.AutomaticEndConstructCorrection.ViewCreationListener">
	<summary>
 Tracks user's interaction with editor
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.AutomaticEndConstructCorrection.LetterOnlyTrackingSpan">
	<summary>
 This is a workaround until Jason checkin actual custom tracking span
 </summary>
</member><member name="T:Roslyn.Services.Editor.VisualBasic.AutomaticEndConstructCorrection.AutomaticEndConstructCorrector">
	<summary>
 Tracks user's interaction with editor
 </summary>
</member>
</members>
</doc>